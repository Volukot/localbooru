plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Note: we need to put dummy keystore so that compiler does not complain
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists() && !keystorePropertiesFile.isDirectory()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    keystoreProperties['uatStoreFile'] = 'dummy.keystore';
    keystoreProperties['prodStoreFile'] = 'dummy.keystore';
}

if (keystoreProperties['prodStoreFile'] == null) {
    keystoreProperties['prodStoreFile'] = 'dummy.keystore'
}

android {
    namespace "com.auser.localbooru"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.auser.localbooru"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "flavor-type"

    // Here we tell Android where to find the correct keystore for each of our signing config
    signingConfigs {
        prodRelease {
            storeFile file(keystoreProperties['prodStoreFile'])
            storePassword keystoreProperties['prodStorePassword']
            keyAlias keystoreProperties['prodKeyAlias']
            keyPassword keystoreProperties['prodKeyPassword']
        }
    }

    // Flavors (a.k.a. build variants) are registered here
    productFlavors {
        dev {
            dimension "flavor-type"
            resValue "string", "app_name", "CI/CD Demo - Dev"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        prod {
            dimension "flavor-type"
            resValue "string", "app_name", "CI/CD Demo"
            signingConfig signingConfigs.prodRelease
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
